import tkinter as tk
import random
import string

class PasswordGeneratorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Password Generator")
        
        self.username_label = tk.Label(root, text="Enter your username:")
        self.username_label.pack()
        
        self.username_entry = tk.Entry(root)
        self.username_entry.pack(pady=5)
        
        self.length_label = tk.Label(root, text="Enter password length:")
        self.length_label.pack()
        
        self.length_entry = tk.Entry(root)
        self.length_entry.pack(pady=5)
        
        self.generate_button = tk.Button(root, text="Generated Password", command=self.generate_password)
        self.generate_button.pack(pady=10)
        
        self.password_var = tk.StringVar()
        self.password_entry = tk.Entry(root, textvariable=self.password_var, font=("Helvetica", 15), bd=10, insertwidth=1, width=20)
        self.password_entry.pack(pady=10)
        
        self.accept_button = tk.Button(root, text="Accept", command=self.accept_password)
        self.accept_button.pack(pady=5)
        
        self.reject_button = tk.Button(root, text="Reject", command=self.reject_password)
        self.reject_button.pack(pady=5)
        
        self.generated_password = ""
    
    def generate_password(self):
        try:
            length = int(self.length_entry.get())
            username = self.username_entry.get()
            
            if length <= 0:
                raise ValueError("Password length should be greater than 0.")
            
            characters = string.ascii_letters + string.digits + string.punctuation
            password = ''.join(random.choice(characters) for _ in range(length))
            
            self.generated_password = password
            self.password_var.set(password)
        except ValueError as e:
            self.generated_password = ""
            self.password_var.set("")
            self.show_error(str(e))
    
    def accept_password(self):
        if self.generated_password:
            self.show_message("Password accepted!")
        else:
            self.show_error("No password generated to accept.")
    
    def reject_password(self):
        self.generated_password = ""
        self.password_var.set("")
        self.show_message("Password rejected.")
    
    def show_error(self, message):
        tk.messagebox.showerror("Error", message)
    
    def show_message(self, message):
        tk.messagebox.showinfo("Info", message)
    
def main():
    root = tk.Tk()
    app = PasswordGeneratorApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()

